{{- if (include "app.ml.createSecret" .) }}
{{- $redisUrl := printf "redis://:%s@%s" (include "app.redis.password" .) (include "app.redis.host" .) -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "app.ml.secretName" . }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
    app.kubernetes.io/component: ml
  annotations: 
  {{- if .Values.commonAnnotations }}
  {{ include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  {{- /* Secrets to be used when creating redis connection in redisdriver.py in the ml code */}}
  REDIS_HOST: {{ $redisUrl | b64enc | quote }}
  REDIS_PASSWORD: {{ include "app.redis.password" . | b64enc | quote }}
  {{- /* ML code runs aws cli commands and will need credentials - also if using minio as the endpoint, then the aws cli
  commands will need the minio endpoint url added (as bash alias?) */}}
  AWS_ACCESS_KEY_ID: {{ .Values.ml.aws.key.accessKeyID | b64enc | quote }}
  AWS_SECRET_ACCESS_KEY: {{ .Values.ml.aws.key.secretAccessKey | b64enc | quote  }}
  S3_ENDPOINT: {{ .Values.ml.aws.s3.endpoint | b64enc | quote }}
{{- end }}
---