{{- $offlineMaintenanceEnabled :=  .Values.neo4j.offlineMaintenanceModeEnabled }}
apiVersion: {{ include "common.capabilities.statefulset.apiVersion" . }}
kind: StatefulSet
metadata:
  name: {{ include "app.neo4j.name" . }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
    app.kubernetes.io/component: neo4j
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
spec:
  serviceName: {{ include "app.neo4j.name" . }}
  podManagementPolicy: "Parallel" # This setting means that the StatefulSet controller doesn't block applying changes until the existing Pod is READY.
  replicas: {{ .Values.neo4j.replicaCount }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: neo4j
  template:
    metadata:
      annotations:
        deploy-ts: {{ now | quote }}
        checksum/configmap: {{ include (print $.Template.BasePath "/neo4j/configmap.yaml") . | sha256sum }}
        {{- if and (not .Values.neo4j.tls.existingSecret) .Values.neo4j.tls.enabled }}
        checksum/tls-secret: {{ include (print $.Template.BasePath "/neo4j/tls-secret.yaml") . | sha256sum }}
        {{- end}}
      labels:    
      {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: neo4j
      {{- if .Values.commonLabels }}
      {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 8 }}
      {{- end }}
    spec:
      {{- include "app.neo4j.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.neo4j.podAntiAffinity }}
      affinity:
        {{- if kindIs "bool" .Values.neo4j.podAntiAffinity | and .Values.neo4j.podAntiAffinity }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels: {{- include "common.labels.matchLabels" . | nindent 18 }}
                  app.kubernetes.io/component: neo4j
              topologyKey: kubernetes.io/hostname
        {{- else }}
        podAntiAffinity: {{ toYaml .Values.neo4j.podAntiAffinity | nindent 10 }}
        {{- end }}
      {{- end }}
      serviceAccountName: {{ include "app.neo4j.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ if $offlineMaintenanceEnabled  }}0{{ else }}{{ .Values.neo4j.terminationGracePeriodSeconds }}{{ end }}
      {{- $initContainers := .Values.neo4j.initContainers }}
      {{- $initChmodContainer := include "app.neo4j.initChmodContainer" . }}
      {{- if $initChmodContainer }}{{ $initContainers = fromYaml $initChmodContainer | prepend $initContainers }}{{ end }}
      {{- with $initContainers }}
      initContainers:
        {{- range $i, $initContainer := . }}
        {{- if not $offlineMaintenanceEnabled | or $initContainer.enabledInOfflineMaintenanceMode }}
        - {{ omit $initContainer "enabledInOfflineMaintenanceMode" | toYaml | indent 10 | trimAll " " }}
          {{- if not ( hasKey $initContainer "image") }}
          image: {{ template "app.neo4j.image" . }}
          {{- end }}
          {{- if not ( hasKey $initContainer "volumeMounts") }}
          volumeMounts: {{ include "app.neo4j.volumeMounts" ( omit $.Values.neo4j.volumes "logs" "metrics" ) | nindent 12 }}
          {{- end }}
        {{- end }}
        {{- end }}
      {{- end }}
      containers:
        - name: "neo4j"
          image: {{ template "app.neo4j.image" . }}
          {{- with .Values.neo4j.image.pullPolicy }}
          imagePullPolicy: {{ . | quote }}
          {{- end }}
          {{- if $offlineMaintenanceEnabled }}
          command:
            - "bash"
            - "-c"
            - "while true; do echo 'Neo4j is not running. Pod is in offline maintenance mode. Remove neo4j.offlineMaintenanceModeEnabled setting and run `helm upgrade ...` to resume normal operation.'; sleep 60; done"
          {{- end }}
          envFrom:
            - secretRef:
                name: {{ include "app.neo4j.secretName" . }}
            {{- if .Values.neo4j.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" ( dict "value" .Values.neo4j.extraEnvVarsCM "context" $ ) }}
            {{- end }}
            {{- if .Values.neo4j.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" ( dict "value" .Values.neo4j.extraEnvVarsSecret "context" $ ) }}
            {{- end }}
          env:
            {{- if eq .Values.neo4j.acceptLicenseAgreement "yes" }}
            - name: NEO4J_ACCEPT_LICENSE_AGREEMENT
              value: "yes"
            {{- end }}
            - name: NEO4J_CONF
              value: "/config/"
            - name: HELM_NEO4J_VERSION
              value: "{{ .Values.neo4j.version }}"
            - name: HELM_CHART_VERSION
              value: "{{ .Chart.Version }}"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          {{- if .Values.neo4j.extraEnvVars }}
            {{- include "common.tplvalues.render" ( dict "value" .Values.neo4j.extraEnvVars "context" $ ) | nindent 12 }}
          {{- end }}
          ports:
            - containerPort: 7474
              name: http
            - containerPort: 7687
              name: bolt
            - containerPort: 7473
              name: https
            - containerPort: 6362
              name: backup
          {{- with .Values.neo4j.resources }}
          resources:
            {{- if hasKey . "requests" | or (hasKey . "limits") }}
            {{- omit . "cpu" "memory" | toYaml | nindent 12 }}
            {{- else }}
            requests: {{ . | toYaml | nindent 14 }}
            limits: {{ . | toYaml | nindent 14 }}
            {{- end }}
          {{- end }}
          securityContext: {{ omit .Values.neo4j.securityContext "fsGroupChangePolicy" "fsGroup" | toYaml  | nindent 14 }}
          volumeMounts:
            - name: "neo4j-conf"
              mountPath: "/config/neo4j.conf"
            {{- if .Values.neo4j.tls.enabled }}
            - name: "tls-secrets"
              mountPath: "/var/lib/neo4j/certificates/bolt/public.crt"
              subPath: "{{ .Values.neo4j.tls.certFilename | default "tls.crt" }}"
              readOnly: true
            - name: "tls-secrets"
              mountPath: "/var/lib/neo4j/certificates/bolt/private.key"
              subPath: "{{ .Values.neo4j.tls.certKeyFilename | default "tls.key" }}"
              readOnly: true
            - name: "tls-secrets"
              mountPath: "/var/lib/neo4j/certificates/bolt/trusted"
              subPath: "{{ .Values.neo4j.tls.certCAFilename | default "ca.crt" }}"
              readOnly: true
            - name: "tls-secrets"
              mountPath: "/var/lib/neo4j/certificates/https/public.crt"
              subPath: "{{ .Values.neo4j.tls.certFilename | default "tls.crt" }}"
              readOnly: true
            - name: "tls-secrets"
              mountPath: "/var/lib/neo4j/certificates/https/private.key"
              subPath: "{{ .Values.neo4j.tls.certKeyFilename | default "tls.key" }}"
              readOnly: true
            - name: "tls-secrets"
              mountPath: "/var/lib/neo4j/certificates/https/trusted"
              subPath: "{{ .Values.neo4j.tls.certCAFilename | default "ca.crt" }}"
              readOnly: true
            {{- end }}
            {{- include "app.neo4j.volumeMounts" .Values.neo4j.volumes | indent 12 }}
            {{- if $offlineMaintenanceEnabled  }}
            {{- include "app.neo4j.maintenanceVolumeMounts" .Values.neo4j.volumes | indent 12 }}
            {{- end }}
          readinessProbe:
            tcpSocket:
              port: 7687
            failureThreshold: {{ .Values.neo4j.readinessProbe.failureThreshold }}
            timeoutSeconds: {{ .Values.neo4j.readinessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.neo4j.readinessProbe.periodSeconds }}
          {{- if $offlineMaintenanceEnabled }}
          # liveness and startup probes are disabled in offlineMaintenanceMode
          {{- else }}
          livenessProbe:
            tcpSocket:
              port: 7687
            failureThreshold: {{ .Values.neo4j.livenessProbe.failureThreshold }}
            timeoutSeconds: {{ .Values.neo4j.livenessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.neo4j.livenessProbe.periodSeconds }}
          startupProbe:
            tcpSocket:
              port: 7687
            failureThreshold: {{ .Values.neo4j.startupProbe.failureThreshold }}
            periodSeconds: {{ .Values.neo4j.startupProbe.periodSeconds }}
          {{- end }}
      volumes:
        {{- if .Values.neo4j.tls.enabled }}
        - name: tls-secret-files
          secret:
            secretName: {{ include "app.neo4j.tlsSecretName" . | quote }}
        {{- end }}
        - name: neo4j-conf
          projected:
            defaultMode: 0440
            sources:
              - configMap:
                  name: {{ include "app.neo4j.configMapName" . | printf "%s-defaults" | quote }}
              - configMap:
                  name: {{ include "app.neo4j.configMapName" .  | quote }}
        {{- with include "app.neo4j.volumes" . }}{{ nindent 8 . }}{{ end -}}
  {{- $volumeClaimTemplates := include "app.neo4j.volumeClaimTemplates" . -}}
  {{- if $volumeClaimTemplates }}
  volumeClaimTemplates: {{ $volumeClaimTemplates | nindent 4 }}
  {{- end }}
