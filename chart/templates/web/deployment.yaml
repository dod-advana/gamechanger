apiVersion:  {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ include "app.web.name" . }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
    app.kubernetes.io/component: ml
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.web.replicaCount }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: web
  template:
    metadata:
      annotations:
        deploy-ts: {{ now | quote }}
        {{- if not .Values.web.existingSecret }}
        checksum/secret: {{ include (print $.Template.BasePath "/web/secret.yaml") . | sha256sum }}
        {{- end}}
        {{- if and (not .Values.web.tls.existingSecret) .Values.web.tls.enabled }}
        checksum/tls-secret: {{ include (print $.Template.BasePath "/web/tls-secret.yaml") . | sha256sum }}
        {{- end}}
        checksum/configmap: {{ include (print $.Template.BasePath "/web/configmap.yaml") . | sha256sum }}
        {{- if eq (include "app.elasticsearch.createSecret" .) "true" }}
        checksum/es-secret: {{ include (print $.Template.BasePath "/common/es-secret.yaml") . | sha256sum }}
        {{- end }}
        {{- with .Values.web.podAnnotations -}}{{- toYaml . | nindent 8 }}{{- end }} 
      labels:
      {{- include "common.labels.standard" . | nindent 8 }}
        role: web
        app.kubernetes.io/component: web
      {{- if .Values.commonLabels }}
      {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 8 }}
      {{- end }}
    spec:
      {{- include "app.web.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "app.web.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 10
      volumes: 
        {{- if .Values.web.tls.enabled }}
        - name: tls-secret-files
          secret:
            secretName: {{ include "app.web.tlsSecretName" . | quote }}
        {{- end }}
      {{- if .Values.web.init.container.enabled }}
      initContainers:
        - name: init-web
          image: {{ template "app.web.init.container.image" . }}
          imagePullPolicy: {{ .Values.web.image.pullPolicy | quote }}
          command: ["/bin/bash", "-c"]
          args: 
            - |
              {{- .Values.web.init.container.script | trim | nindent 16 }}
          {{- with .Values.web.appContainerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: APP_VERSION
              value: {{ default "1.0.0" .Chart.AppVersion | quote }}
          {{- if .Values.web.extraEnvVars }}
            {{- include "common.tplvalues.render" ( dict "value" .Values.web.extraEnvVars "context" $ ) | nindent 12 }}
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "app.web.configMapName" .  | quote }}
            - secretRef:
                name: {{ include "app.web.secretName" .  | quote }}
            {{- if .Values.web.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" ( dict "value" .Values.web.extraEnvVarsCM "context" $ ) }}
            {{- end }}
            {{- if .Values.web.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" ( dict "value" .Values.web.extraEnvVarsSecret "context" $ ) }}
            {{- end }}
      {{- end }}
      containers:
        - name: {{ include "app.web.name" . }}
          image: {{ template "app.web.image" . }}
          {{- with .Values.web.image.pullPolicy }}
          imagePullPolicy: {{ . | quote }}
          {{- end }}
          {{- with .Values.web.startCommand }}
          command:
            {{- range . }}
            {{- printf "- %s" (. | quote) | nindent 12 }}
            {{- end -}}
          {{- end }}
          {{- with .Values.web.appContainerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: REACT_APP_VERSION
              value: {{ default "1.0.0" .Chart.AppVersion | quote }}
          {{- if .Values.elasticsearch.security.enabled }}
            {{- include "app.elasticsearch.security.envVars" . | nindent 12 }}
          {{- end }}
          {{- include "app.postgresql.security.envVars" . | nindent 12 }}
          {{- if .Values.web.extraEnvVars }}
            {{- include "common.tplvalues.render" ( dict "value" .Values.web.extraEnvVars "context" $ ) | nindent 12 }}
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "app.web.configMapName" .  | quote }}
            {{- if .Values.web.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" ( dict "value" .Values.web.extraEnvVarsCM "context" $ ) }}
            {{- end }}
            {{- if .Values.web.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" ( dict "value" .Values.web.extraEnvVarsSecret "context" $ ) }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.web.service.ports.http }}
            {{- if .Values.web.tls.enabled }}
            - name: https
              containerPort: {{ .Values.web.service.ports.https }}
            {{- end }}
          {{- with .Values.web.probes -}}{{- toYaml . | nindent 10}}{{- end }}
          {{- with .Values.web.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
