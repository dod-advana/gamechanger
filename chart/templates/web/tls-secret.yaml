{{- $ca := genCA "app.web-ca" 365 }}
{{- $releaseNamespace := .Release.Namespace }}
{{- $clusterDomain := .Values.clusterDomain }}
{{- $serviceName := include "app.web.name" . }}
{{- $fqdn := include "app.web.fqdn" . }}
{{- $headlessServiceName := printf "%s-headless" (include "app.web.name" .) }}
{{- $altNames := list (printf "*.%s.%s.svc.%s" $serviceName $releaseNamespace $clusterDomain) (printf "%s.%s.svc.%s" $serviceName $releaseNamespace $clusterDomain) (printf "*.%s.%s.svc.%s" $headlessServiceName $releaseNamespace $clusterDomain) (printf "%s.%s.svc.%s" $headlessServiceName $releaseNamespace $clusterDomain) "127.0.0.1" "localhost" $fqdn }}
{{- if .Values.web.tls.certCAFilename }}
{{- $additionalCAs := (.Files.Glob (printf "certs/%s" (.Values.web.tls.certCAFilename) )) }}
{{- end }}
{{- $crt := genSignedCert $serviceName nil $altNames 365 $ca }}
# nginx requires combining certificates into one file, with the primary cert first
{{- $combinedCerts := printf "%s\n%s" $crt.Cert $ca.Cert }} 
{{- if .Values.ingress.web.enabled }}
{{- range .Values.ingress.web.secrets }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .name }}
  namespace: {{ $.Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" $ | nindent 4 }}
    {{- if $.Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" $.Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  annotations: 
    helm.sh/resource-policy: "keep"
  {{- if $.Values.commonAnnotations }}
  {{ include "common.tplvalues.render" ( dict "value" $.Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
type: kubernetes.io/tls
data:
  tls.crt: {{ .certificate | b64enc }}
  tls.key: {{ .key | b64enc }}
---
{{- end }}
{{- if and .Values.ingress.web.tls .Values.ingress.web.selfSigned }}
{{- $cert := genSignedCert .Values.ingress.web.hostname nil (list .Values.ingress.web.hostname (include "app.web.fqdn" .)) 365 $ca }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ printf "%s-tls" (include "app.web.fqdn" .) }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  annotations: 
    helm.sh/resource-policy: "keep"
  {{- if .Values.commonAnnotations }}
  {{ include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
type: kubernetes.io/tls
data:
  tls.crt: {{ $crt.Cert | b64enc | quote }}
  tls.key: {{ $crt.Key | b64enc | quote }}
  ca.crt: {{ $ca.Cert | b64enc | quote }}
{{- end }}
{{- end }}
{{- if and (include "app.web.createTlsSecret" .) .Values.web.tls.autoGenerated }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "app.web.tlsSecretName" . }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  annotations: 
    helm.sh/resource-policy: "keep"
  {{- if .Values.commonAnnotations }}
  {{ include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
type: kubernetes.io/tls
data:
  tls.crt: {{ $combinedCerts | b64enc | quote }}
  tls.key: {{ $crt.Key | b64enc | quote }} 
  ca.crt: {{ $ca.Cert | b64enc | quote }}
{{- else if (include "app.web.createTlsSecret" .) }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "app.web.tlsSecretName" . }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  annotations: 
  {{- if .Values.commonAnnotations }}
  {{ include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
type: kubernetes.io/tls
data:
{{ (.Files.Glob (printf "certs/%s" (.Values.web.tls.certFilename))).AsSecrets | indent 2 }}
{{ (.Files.Glob (printf "certs/%s" (.Values.web.tls.certKeyFilename))).AsSecrets | indent 2 }}
{{ (.Files.Glob (printf "certs/%s" (.Values.web.tls.certCAFilename))).AsSecrets | indent 2 }}
{{- end }}